{"version":3,"sources":["winning-states.js","game-buttons.js","index.js"],"names":["winningStates","SquareBox","useState","currentState","setState","playCount_O","setPlayCount_O","playCount_X","setPlayCount_X","winnerName","setWinnerName","playEnteries","count","setCount","toggleState","setWinnerStacks","b1","document","getElementById","pop","b2","b3","i","className","setTimeout","handlePadClick","boxIndex","innerHTML","console","log","terminator","parentKey","childKey","push","checkWinner","Button","variant","color","id","onClick","focus","resetGame","initialPose","pose","charPoses","exit","opacity","y","enter","delay","charIndex","width","height","chartType","loader","data","options","title","rootProps","Game","response","a","fetch","method","headers","body","JSON","stringify","post","text","test","ReactDOM","render"],"mappings":"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","file":"static/js/main.013d46b4.chunk.js","sourcesContent":["const winningStates = [[1, 2, 3], [4, 5, 6], [7, 8, 9], [1, 4, 7], [2, 5, 8], [3, 6, 9], [1, 5, 9], [7, 5, 3]];\r\n\r\nexport default winningStates;","import React, { useState } from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport winningStates from './winning-states.js'\r\nimport SplitText from 'react-pose-text';\r\nimport Game from './index.js'\r\nimport './index.css'\r\nimport Button from '@material-ui/core/Button';\r\nimport { Chart } from \"react-google-charts\";\r\n\r\n\r\nconst SquareBox = () => {\r\n\r\n    // game state\r\n    let [currentState, setState] = useState(\"O\");\r\n    let [playCount_O, setPlayCount_O] = useState(0);\r\n    let [playCount_X, setPlayCount_X] = useState(0);\r\n    let [winnerName, setWinnerName] = useState(\" \");\r\n    const playEnteries = [];\r\n\r\n    // game count\r\n    const [count, setCount] = useState(0);\r\n\r\n    // toggling state\r\n    function toggleState() {\r\n        if (currentState === \"O\") setState(\"X\");\r\n        else setState(\"O\");\r\n    }\r\n\r\n    // function set winner stacks\r\n    function setWinnerStacks() {\r\n\r\n        const b1 = document.getElementById(\"box-\" + playEnteries.pop());\r\n        const b2 = document.getElementById(\"box-\" + playEnteries.pop());\r\n        const b3 = document.getElementById(\"box-\" + playEnteries.pop());\r\n\r\n        for (var i = 1; i <= 9; i++) {\r\n            if (i == b1 || i == b2 || i == b3) {\r\n                continue;\r\n            } else document.getElementById(\"box-\" + i).className = 'square-box-disabled '\r\n        }\r\n\r\n        b1.className = 'square-box-winner'\r\n        setTimeout(() => {\r\n            b2.className = 'square-box-winner'\r\n        }, 200);\r\n        setTimeout(() => {\r\n            b3.className = 'square-box-winner'\r\n        }, 400);\r\n        setTimeout(() => {\r\n            b3.className = 'square-box-winner-d'\r\n        }, 600);\r\n        setTimeout(() => {\r\n            b2.className = 'square-box-winner-d'\r\n        }, 800);\r\n        setTimeout(() => {\r\n            b1.className = 'square-box-winner-d'\r\n        }, 1000);\r\n    }\r\n\r\n    // checking if player wins\r\n    function checkWinner() {\r\n\r\n        let terminator = false;\r\n\r\n        for (var parentKey in winningStates) {\r\n            for (var childKey in winningStates[parentKey]) {\r\n\r\n                // checking O\r\n                if (document.getElementById(\"box-\" + winningStates[parentKey][childKey]).innerHTML === \"O\") {\r\n                    setPlayCount_O(playCount_O++);\r\n                    playEnteries.push(winningStates[parentKey][childKey]);\r\n\r\n                    if (playCount_O === 3) {\r\n                        console.log(\"O wins\");\r\n                        terminator = true;\r\n                        setWinnerStacks();\r\n                        setWinnerName(winnerName = \"O WINS\")\r\n                        document.getElementById(\"reset-icon\").className = 'fas-enabled fas fa-redo-alt'\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                // checking X\r\n                if (document.getElementById(\"box-\" + winningStates[parentKey][childKey]).innerHTML === \"X\") {\r\n                    setPlayCount_X(playCount_X++);\r\n                    playEnteries.push(winningStates[parentKey][childKey]);\r\n\r\n                    if (playCount_X === 3) {\r\n                        console.log(\"X wins\");\r\n                        terminator = true;\r\n                        setWinnerStacks();\r\n                        setWinnerName(winnerName = \"X WINS\")\r\n                        break;\r\n                    }\r\n                }\r\n\r\n            }\r\n            // resetting counter\r\n            setPlayCount_O(playCount_O = 0)\r\n            setPlayCount_X(playCount_X = 0)\r\n            // terminating loop on getting winnner\r\n            if (terminator) {\r\n                break;\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n\r\n    // reset game\r\n    function resetGame() {\r\n\r\n        document.getElementById(\"reset-icon\").className = 'fas-disabled fas fa-redo-alt'\r\n        document.getElementById(\"winner-id\").focus();\r\n\r\n        setState(\"O\");\r\n        setPlayCount_O(0);\r\n        setPlayCount_X(0);\r\n        setWinnerName(\" \");\r\n\r\n        for (var i = 1; i <= 9; i++) {\r\n            document.getElementById(\"box-\" + i).innerHTML = \" \";\r\n            document.getElementById(\"box-\" + i).className = 'square-box'\r\n        }\r\n\r\n        console.log(\"Game reset\");\r\n    }\r\n\r\n    // handling game buttons click\r\n    function handlePadClick(boxIndex) {\r\n\r\n        switch (boxIndex) {\r\n\r\n            case 1: document.getElementById(\"box-1\").innerHTML = currentState;\r\n                document.getElementById(\"box-1\").className = 'square-box-disabled'\r\n                toggleState();\r\n                break;\r\n            case 2: document.getElementById(\"box-2\").innerHTML = currentState;\r\n                document.getElementById(\"box-2\").className = 'square-box-disabled'\r\n                toggleState();\r\n                break;\r\n            case 3: document.getElementById(\"box-3\").innerHTML = currentState;\r\n                document.getElementById(\"box-3\").className = 'square-box-disabled'\r\n                toggleState();\r\n                break;\r\n            case 4: document.getElementById(\"box-4\").innerHTML = currentState;\r\n                document.getElementById(\"box-4\").className = 'square-box-disabled'\r\n                toggleState();\r\n                break;\r\n            case 5: document.getElementById(\"box-5\").innerHTML = currentState;\r\n                document.getElementById(\"box-5\").className = 'square-box-disabled'\r\n                toggleState();\r\n                break;\r\n            case 6: document.getElementById(\"box-6\").innerHTML = currentState;\r\n                document.getElementById(\"box-6\").className = 'square-box-disabled'\r\n                toggleState();\r\n                break;\r\n            case 7: document.getElementById(\"box-7\").innerHTML = currentState;\r\n                document.getElementById(\"box-7\").className = 'square-box-disabled'\r\n                toggleState();\r\n                break;\r\n            case 8: document.getElementById(\"box-8\").innerHTML = currentState;\r\n                document.getElementById(\"box-8\").className = 'square-box-disabled'\r\n                toggleState();\r\n                break;\r\n            case 9: document.getElementById(\"box-9\").innerHTML = currentState;\r\n                document.getElementById(\"box-9\").className = 'square-box-disabled'\r\n                toggleState();\r\n                break;\r\n            default: console.log(\"No Such Move\");\r\n        }\r\n\r\n        console.log(count);\r\n        if (count > 3) {\r\n            checkWinner();\r\n            console.log(\"Time to decide winner\");\r\n        }\r\n        setCount(count + 1);\r\n\r\n    }\r\n\r\n    const charPoses = {\r\n        exit: { opacity: 0, y: 20 },\r\n        enter: {\r\n            opacity: 1,\r\n            y: 0,\r\n            delay: ({ charIndex }) => charIndex * 50\r\n        }\r\n    };\r\n\r\n\r\n    return (\r\n        <div className=\"game-parent-container\">\r\n\r\n            <div className=\"game-options-buttons-container\">\r\n                <p>Play with computer</p>\r\n                <div className=\"computer-buttons-container\">\r\n                    <Button variant=\"contained\" color=\"primary\">\r\n                        Beginner\r\n                    </Button>\r\n                    <Button variant=\"contained\" color=\"primary\">\r\n                        Advanced\r\n                    </Button>\r\n                </div>\r\n                <Button variant=\"contained\" color=\"secondary\">\r\n                    Play With Friend\r\n                </Button>\r\n            </div>\r\n\r\n            <div className=\"box-icon-container\">\r\n                <div className=\"game-box-container\">\r\n                    <button className=\"square-box\" id=\"box-1\" onClick={() => handlePadClick(1)}></button>\r\n                    <button className=\"square-box\" id=\"box-2\" onClick={() => handlePadClick(2)}></button>\r\n                    <button className=\"square-box\" id=\"box-3\" onClick={() => handlePadClick(3)}></button>\r\n\r\n                    <button className=\"square-box\" id=\"box-4\" onClick={() => handlePadClick(4)}></button>\r\n                    <button className=\"square-box\" id=\"box-5\" onClick={() => handlePadClick(5)}></button>\r\n                    <button className=\"square-box\" id=\"box-6\" onClick={() => handlePadClick(6)}></button>\r\n\r\n                    <button className=\"square-box\" id=\"box-7\" onClick={() => handlePadClick(7)}></button>\r\n                    <button className=\"square-box\" id=\"box-8\" onClick={() => handlePadClick(8)}></button>\r\n                    <button className=\"square-box\" id=\"box-9\" onClick={() => handlePadClick(9)}></button>\r\n\r\n                </div>\r\n                <i id=\"reset-icon\" className=\"fas-disabled fas fa-redo-alt\" onClick={() => resetGame()}></i>\r\n            </div>\r\n            <div className=\"winner\" id=\"winner-id\">\r\n                <SplitText initialPose=\"exit\" pose=\"enter\" charPoses={charPoses}>\r\n                    {winnerName}\r\n                </SplitText>\r\n            </div>\r\n\r\n            <Chart className=\"piechart\"\r\n                width={'500px'}\r\n                height={'300px'}\r\n                chartType=\"PieChart\"\r\n                loader={<div>Loading Chart</div>}\r\n                data={[\r\n                    ['Task', 'Wins'],\r\n                    ['O', 2],\r\n                    ['X', 6]\r\n                ]}\r\n                options={{\r\n                    title: 'Win Propotions',\r\n                }}\r\n                rootProps={{ 'data-testid': '1' }}\r\n            />\r\n\r\n        </div >\r\n\r\n    )\r\n}\r\n\r\n\r\nexport default SquareBox","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport SquareBox from './game-buttons.js'\n\n\nconst Game = () => {\n\n  let response;\n  async function test () {\n      response = await fetch('/api/world', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ post: \"rakesh how are you? haanji\" }),\n    });\n    console.log(await response.text());\n  }\n\n    \n  test();\n\n  return (\n    <div className=\"main-container\">\n      <div className=\"title-container\">\n        <h3 className=\"game-title\">TIC - TAC - TOE Testing with github</h3>\n\n      </div>\n      <SquareBox />\n    </div>\n  )\n}\n\n\nReactDOM.render(<Game />, document.getElementById('root'));\n\nexport default Game;\n"],"sourceRoot":""}